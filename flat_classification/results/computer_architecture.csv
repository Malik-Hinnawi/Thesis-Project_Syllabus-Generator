Key,Value
1,"embedded computing 1, complex systems and microprocessors, embedding computers, characteristics of embedded computing, why use microprocessors, the physics of software, challenges in embedded computing system, performance in embedded computing, the embedded system design process, requirements, speci, architecture design, designing hardware and software, system integration, formalisms for system design, structural description, behavioral description, model train controller, requirements, dcc, conceptual speci, detailed speci, lessons learned, a guided tour of this book, chapter, chapter, chapter, chapter, chapter, chapter, chapter, chapter"
2,"instruction sets 55, preliminaries, computer architecture taxonomy, assembly language, arm processor, processor and memory organization, data operations, flow of control, ti c, processor and memory organization, addressing modes, data operations, flow of control, c coding guidelines"
3,"cpus 91, programming input and output, input and output devices, input and output primitives, busywait io, interrupts, supervisor mode exceptions and traps, supervisor mode, exceptions, traps, coprocessors, memory system mechanisms, caches, memory management units and address, cpu performance, pipelining, caching, cpu power consumption, design example data compressor, requirements and algorithm, speci, program design, testing"
4,"bus-based computer systems 153, t h e c p u b u s, bus protocols, dma, system bus con, amba bus, memory devices, memory device organization, randomaccess memories, readonly memories, io devices, timers and counters, ad and da converters, keyboards, leds, displays, touchscreens, component interfacing, memory interfacing, device interfacing, designing with microprocessors, system architecture, hardware design, the pc as a platform, development and debugging, development environments, debugging techniques, debugging challenges, systemlevel performance analysis, systemlevel performance analysis, parallelism, design example alarm clock, requirements, speci, system architecture, component design and testing, system integration and testing"
5,"program design and analysis 209, components for embedded programs, state machines, streamoriented programming and circular, queues, models of programs, data flow graphs, controldata flow graphs, assembly  linking and loading, assemblers, linking, basic compilation techniques, statement translation, procedures, data structures, program optimization, expression simpli, dead code elimination, procedure inlining, loop transformations, register allocation, scheduling, instruction selection, understanding and using your compiler, interpreters and jit compilers, programlevel performance analysis, elements of program performance, measurementdriven performance analysis, software performance optimization, loop optimizations, performance optimization strategies, programlevel energy and power analysis, analysis and optimization of program size, clearbox testing, blackbox testing, evaluating function tests, theory of operation and requirements, speci, system architecture, component design and testing, system integration and testing"
6,"processes and operating systems 293, multiple tasks and multiple processes, tasks and processes, multirate systems, timing requirements on processes, cpu metrics, process state and scheduling, some scheduling policies, running periodic processes, preemptive realtime operating systems, preemption, priorities, processes and context, processes and objectoriented design, prioritybased scheduling, ratemonotonic scheduling, earliestdeadlinefirst scheduling, rms vs, a closer look at our modeling assumptions, interprocess communication mechanisms, shared memory communication, message passing, signals, evaluating operating system performance, power management and optimization for processes, design example telephone answering machine, theory of operation and requirements, speci, system architecture, component design and testing, system integration and testing"
7,"multiprocessors 353, why multiprocessors, cpus and accelerators, system architecture framework, system integration and debugging, multiprocessor performance analysis, accelerators and speedup, performance effects of scheduling and allocation, buffering and performance, consumer electronics architecture, use cases and requirements, platforms and operating systems, flash file systems, design example cell phones, design example compact discs and dvds, design example audio players, design example digital still cameras, design example video accelerator, algorithm and requirements, speci, architecture, component design, system testing"
8,"networks 397, distributed embedded architectures, why distributed, network abstractions, hardware and software architectures, message passing programming, networks for embedded systems, the i, ethernet, fieldbus, networkbased design, internetenabled systems, internet, internet applications, internet security, vehicles as networks, automotive networks, avionics, sensor networks, design example elevator controller, theory of operation and requirements, speci, architecture, testing"
9,"system design techniques 437, design methodologies, why design methodologies, design flows, requirements analysis, speci, controloriented speci, advanced speci, system analysis and architecture design, quality assurance, quality assurance techniques, verifying the speci, design reviews"
